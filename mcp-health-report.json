{
  "timestamp": "2025-01-06T17:30:00Z",
  "summary": {
    "total": 12,
    "passed": 7,
    "failed": 3,
    "blocked": 1,
    "timeout": 0,
    "wsl_network_issue": 1
  },
  "servers": [
    {
      "name": "Gemini CLI",
      "category": "AI Integration",
      "status": "✅ WORKING",
      "tests": [
        {
          "name": "Ping Test",
          "tool": "mcp__gemini-cli__Ping",
          "status": "passed",
          "result": "health check",
          "duration": 5,
          "notes": "Custom prompt echoed successfully"
        },
        {
          "name": "Help Command",
          "tool": "mcp__gemini-cli__Help",
          "status": "passed",
          "result": "Comprehensive help output with all CLI options",
          "duration": 2341,
          "notes": "Full command line interface documented"
        }
      ],
      "summary": { "total": 2, "passed": 2, "failed": 0 }
    },
    {
      "name": "Context7 Library Documentation",
      "category": "Documentation",
      "status": "✅ WORKING",
      "tests": [
        {
          "name": "Library Resolution",
          "tool": "mcp__context7-mcp__resolve-library-id",
          "status": "passed",
          "result": "47 Next.js library matches with comprehensive documentation",
          "duration": "~2000",
          "notes": "Extensive library database with trust scores and code snippets"
        }
      ],
      "summary": { "total": 1, "passed": 1, "failed": 0 }
    },
    {
      "name": "Magic UI Components",
      "category": "UI Enhancement", 
      "status": "✅ WORKING",
      "tests": [
        {
          "name": "UI Components List",
          "tool": "mcp__magicui-mcp__getUIComponents",
          "status": "passed",
          "result": "Silent success - component list available",
          "duration": "~500",
          "notes": "Tool available but may require specific parameters"
        },
        {
          "name": "Layout Components",
          "tool": "mcp__magicui-mcp__getLayout",
          "status": "failed",
          "error": "Response exceeds 25000 token limit",
          "duration": "~1000",
          "notes": "Large dataset available but needs pagination or filtering"
        },
        {
          "name": "Button Components",
          "tool": "mcp__magicui-mcp__getButtons",
          "status": "passed",
          "result": "7 animated button components with full implementation",
          "duration": "~800",
          "notes": "Rainbow, shimmer, shiny, interactive hover, subscribe, pulsating, ripple buttons"
        }
      ],
      "summary": { "total": 3, "passed": 2, "failed": 1 }
    },
    {
      "name": "Desktop Commander",
      "category": "System Integration",
      "status": "✅ WORKING",
      "tests": [
        {
          "name": "Directory Listing",
          "tool": "mcp__desktop-commander__list_directory",
          "status": "passed",
          "result": "Complete directory listing with 54 files/directories",
          "duration": "~300",
          "notes": "Full file system access working properly"
        }
      ],
      "summary": { "total": 1, "passed": 1, "failed": 0 }
    },
    {
      "name": "Puppeteer Browser Automation",
      "category": "Browser Automation",
      "status": "❌ BROKEN - Missing Dependencies",
      "tests": [
        {
          "name": "Navigation Test",
          "tool": "mcp__puppeteer__puppeteer_navigate",
          "status": "failed",
          "error": "libnss3.so: cannot open shared object file: No such file or directory",
          "duration": "~500",
          "notes": "Chrome browser dependencies missing in WSL2 environment"
        }
      ],
      "summary": { "total": 1, "passed": 0, "failed": 1 },
      "fix_required": {
        "action": "Install system dependencies",
        "command": "sudo apt-get update && sudo apt-get install -y libnspr4 libnss3 libasound2 libatk-bridge2.0-0 libdrm2 libxcomposite1 libxdamage1 libxrandr2 libgbm1 libxss1 libgconf-2-4",
        "description": "Install required Chrome/Chromium dependencies for headless browser automation"
      }
    },
    {
      "name": "YouTube MCP",
      "category": "Content Research",
      "status": "✅ WORKING",
      "tests": [
        {
          "name": "Video Search",
          "tool": "mcp__youtube-mcp__searchVideos",
          "status": "passed",
          "result": "3 React tutorial videos with complete metadata",
          "duration": "~1500",
          "notes": "YouTube Data API integration working perfectly"
        }
      ],
      "summary": { "total": 1, "passed": 1, "failed": 0 }
    },
    {
      "name": "IDE Integration",
      "category": "Development",
      "status": "✅ WORKING",
      "tests": [
        {
          "name": "Diagnostics Check",
          "tool": "mcp__ide__getDiagnostics",
          "status": "passed",
          "result": "Empty diagnostics array (no errors)",
          "duration": "~100",
          "notes": "VS Code integration working, no current diagnostics"
        }
      ],
      "summary": { "total": 1, "passed": 1, "failed": 0 }
    }
  ],
  "network": [
    {
      "name": "WSL IP Address",
      "command": "hostname -I",
      "status": "passed",
      "output": "172.20.72.33 172.17.0.1",
      "notes": "WSL2 has two network interfaces - main and Docker"
    },
    {
      "name": "Port Listening Check",
      "command": "ss -tuln | grep :3000",
      "status": "passed",
      "output": "tcp   LISTEN 0      511           0.0.0.0:3000       0.0.0.0:*",
      "notes": "Development server listening on all interfaces"
    },
    {
      "name": "Default Gateway",
      "command": "ip route | grep default",
      "status": "passed",
      "output": "default via 172.20.64.1 dev eth0 proto kernel",
      "notes": "Windows host gateway identified"
    },
    {
      "name": "Windows Host Connectivity",
      "command": "ping -c 1 172.20.64.1",
      "status": "failed",
      "error": "100% packet loss",
      "notes": "WSL2 cannot ping Windows host gateway - common WSL2 networking limitation"
    }
  ],
  "environment": {
    "platform": "linux",
    "wsl_distro": "Unknown",
    "wsl_ip": "172.20.72.33",
    "docker_ip": "172.17.0.1",
    "dev_server_port": "3000",
    "dev_server_status": "listening on all interfaces"
  },
  "issues_identified": [
    {
      "severity": "high",
      "component": "Puppeteer Browser Automation",
      "issue": "Missing Chrome/Chromium system dependencies",
      "impact": "Browser automation tests and UI screenshot capabilities unavailable",
      "fix": "Install required system libraries: sudo apt-get install -y libnspr4 libnss3 libasound2",
      "category": "wsl_dependencies"
    },
    {
      "severity": "medium", 
      "component": "Magic UI Layout Components",
      "issue": "Response size exceeds token limit (29,583 > 25,000)",
      "impact": "Cannot retrieve full layout component documentation",
      "fix": "Use pagination or filtering parameters to reduce response size",
      "category": "api_limits"
    },
    {
      "severity": "low",
      "component": "WSL2 Network",
      "issue": "Cannot ping Windows host gateway",
      "impact": "Limited network diagnostics, no impact on MCP functionality", 
      "fix": "Expected behavior in WSL2 - not an actual problem",
      "category": "wsl_networking"
    }
  ],
  "recommendations": [
    {
      "priority": "high",
      "action": "Install Puppeteer Dependencies",
      "command": "sudo apt-get update && sudo apt-get install -y libnspr4 libnss3 libasound2 libatk-bridge2.0-0 libdrm2 libxcomposite1 libxdamage1 libxrandr2 libgbm1 libxss1 libgconf-2-4",
      "description": "Enable browser automation capabilities for comprehensive UI testing"
    },
    {
      "priority": "medium",
      "action": "Configure Magic UI Pagination",
      "description": "Add filtering or pagination parameters when requesting large component sets"
    },
    {
      "priority": "low", 
      "action": "Monitor MCP Performance",
      "description": "Set up automated health checks to catch issues early"
    }
  ],
  "overall_assessment": {
    "status": "MOSTLY WORKING",
    "working_servers": 6,
    "broken_servers": 1, 
    "wsl_compatible": true,
    "port_forwarding_needed": false,
    "main_issue": "Puppeteer dependencies missing",
    "network_conclusion": "WSL2 networking is NOT the primary issue - MCP servers work fine. The main problem is missing system dependencies for browser automation."
  }
}